#lang sicp

(define (carmichael-fools-fermat? n)
  (define (test-all i)
    (cond ((= i n) #t)
          ((fermat-test i) (test-all (inc i)))
          (else #f)))
  (define (fermat-test x)
    (= (expmod x n n) x))
  (define (expmod base exp m)
    (cond ((= exp 0) 1)
          ((even? exp) (remainder (square (expmod base (/ exp 2) m)) m))
          (else (remainder (* base (expmod base (- exp 1) m)) m))))
  (test-all 1))

(define (square x)
  (* x x))

(define test-this
  29674495668685510550154174642905332730771991799853043350995075531276838753171770199594238596428121188033664754218345562493168782883)

(carmichael-fools-fermat? 561)
(carmichael-fools-fermat? 1105)
(carmichael-fools-fermat? 1729)
(carmichael-fools-fermat? 2465)
(carmichael-fools-fermat? 2821)
(carmichael-fools-fermat? 6601)
(carmichael-fools-fermat? 8911)
(carmichael-fools-fermat? 10585)
(carmichael-fools-fermat? 15841)
(carmichael-fools-fermat? 29341)
(carmichael-fools-fermat? 41041)
(carmichael-fools-fermat? 46657)
(carmichael-fools-fermat? 52633)
(carmichael-fools-fermat? 62745)
